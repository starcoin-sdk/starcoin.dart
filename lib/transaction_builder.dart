import 'starcoin/starcoin.dart';
import 'serde/serde.dart';
import 'dart:typed_data';

class TransactionBuilder {
  static Script encode_accept_token_script(TypeTag token_type) {
    var code = new Bytes(Uint8List.fromList([
      -95,
      28,
      -21,
      11,
      1,
      0,
      0,
      0,
      6,
      1,
      0,
      2,
      3,
      2,
      6,
      4,
      8,
      2,
      5,
      10,
      7,
      7,
      17,
      21,
      8,
      38,
      16,
      0,
      0,
      0,
      1,
      0,
      1,
      1,
      1,
      0,
      2,
      1,
      6,
      12,
      0,
      1,
      9,
      0,
      7,
      65,
      99,
      99,
      111,
      117,
      110,
      116,
      12,
      97,
      99,
      99,
      101,
      112,
      116,
      95,
      116,
      111,
      107,
      101,
      110,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      1,
      1,
      0,
      1,
      3,
      11,
      0,
      56,
      0,
      2
    ]));
    List<TypeTag> ty_args = new List<TypeTag>(1);
    ty_args[0] = token_type;
    var args = List<TransactionArgument>();

    var script = new Script(code, ty_args, args);
    return script;
  }

  static Script encode_create_account_script(
      TypeTag token_type,
      AccountAddress fresh_address,
      Bytes public_key_vec,
      Int128 initial_amount) {
    var code = new Bytes(Uint8List.fromList([
      -95,
      28,
      -21,
      11,
      1,
      0,
      0,
      0,
      7,
      1,
      0,
      4,
      2,
      4,
      5,
      3,
      9,
      18,
      4,
      27,
      6,
      5,
      33,
      34,
      7,
      67,
      49,
      8,
      116,
      16,
      0,
      0,
      0,
      1,
      1,
      1,
      1,
      1,
      1,
      0,
      2,
      0,
      1,
      1,
      1,
      0,
      3,
      2,
      1,
      1,
      1,
      0,
      4,
      3,
      4,
      1,
      1,
      0,
      6,
      2,
      6,
      1,
      6,
      2,
      5,
      10,
      2,
      0,
      3,
      6,
      12,
      5,
      11,
      0,
      1,
      9,
      0,
      2,
      6,
      12,
      4,
      1,
      11,
      0,
      1,
      9,
      0,
      4,
      6,
      12,
      5,
      10,
      2,
      4,
      1,
      9,
      0,
      7,
      65,
      99,
      99,
      111,
      117,
      110,
      116,
      5,
      84,
      111,
      107,
      101,
      110,
      14,
      99,
      114,
      101,
      97,
      116,
      101,
      95,
      97,
      99,
      99,
      111,
      117,
      110,
      116,
      10,
      100,
      101,
      112,
      111,
      115,
      105,
      116,
      95,
      116,
      111,
      8,
      119,
      105,
      116,
      104,
      100,
      114,
      97,
      119,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      1,
      1,
      5,
      1,
      18,
      10,
      1,
      11,
      2,
      56,
      0,
      10,
      3,
      50,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      36,
      3,
      8,
      5,
      15,
      10,
      0,
      10,
      1,
      11,
      0,
      10,
      3,
      56,
      1,
      56,
      2,
      5,
      17,
      11,
      0,
      1,
      2
    ]));
    List<TypeTag> ty_args = new List<TypeTag>(1);
    ty_args[0] = token_type;
    List<TransactionArgument> args = new List<TransactionArgument>(3);
    args[0] = new TransactionArgumentAddressItem(fresh_address);
    args[1] = new TransactionArgumentU8VectorItem(public_key_vec);
    args[2] = new TransactionArgumentU128Item(initial_amount);

    var script = new Script(code, ty_args, args);
    return script;
  }

  static Script encode_empty_script_script() {
    var code = new Bytes(Uint8List.fromList(
        [-95, 28, -21, 11, 1, 0, 0, 0, 1, 5, 0, 1, 0, 0, 0, 0, 1, 2]));
    var ty_args = List<TypeTag>();
    var args = List<TransactionArgument>();

    var script = new Script(code, ty_args, args);
    return script;
  }

  static Script encode_peer_to_peer_script(TypeTag token_type,
      AccountAddress payee, Bytes payee_public_key, Int128 amount) {
    var code = new Bytes(Uint8List.fromList([
      -95,
      28,
      -21,
      11,
      1,
      0,
      0,
      0,
      6,
      1,
      0,
      2,
      3,
      2,
      17,
      4,
      19,
      4,
      5,
      23,
      24,
      7,
      47,
      42,
      8,
      89,
      16,
      0,
      0,
      0,
      1,
      0,
      1,
      1,
      1,
      0,
      2,
      2,
      3,
      0,
      0,
      3,
      4,
      1,
      1,
      1,
      0,
      6,
      2,
      6,
      2,
      5,
      10,
      2,
      0,
      1,
      5,
      1,
      1,
      3,
      6,
      12,
      5,
      4,
      4,
      6,
      12,
      5,
      10,
      2,
      4,
      1,
      9,
      0,
      7,
      65,
      99,
      99,
      111,
      117,
      110,
      116,
      14,
      99,
      114,
      101,
      97,
      116,
      101,
      95,
      97,
      99,
      99,
      111,
      117,
      110,
      116,
      9,
      101,
      120,
      105,
      115,
      116,
      115,
      95,
      97,
      116,
      8,
      112,
      97,
      121,
      95,
      102,
      114,
      111,
      109,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      1,
      1,
      5,
      1,
      13,
      10,
      1,
      17,
      1,
      32,
      3,
      5,
      5,
      8,
      10,
      1,
      11,
      2,
      56,
      0,
      11,
      0,
      10,
      1,
      10,
      3,
      56,
      1,
      2
    ]));
    List<TypeTag> ty_args = new List<TypeTag>(1);
    ty_args[0] = token_type;
    List<TransactionArgument> args = new List<TransactionArgument>(3);
    args[0] = new TransactionArgumentAddressItem(payee);
    args[1] = new TransactionArgumentU8VectorItem(payee_public_key);
    args[2] = new TransactionArgumentU128Item(amount);

    var script = new Script(code, ty_args, args);
    return script;
  }

  static Script encode_peer_to_peer_with_metadata_script(
      TypeTag token_type,
      AccountAddress payee,
      Bytes payee_public_key,
      Int128 amount,
      Bytes metadata) {
    var code = new Bytes(Uint8List.fromList([
      -95,
      28,
      -21,
      11,
      1,
      0,
      0,
      0,
      6,
      1,
      0,
      2,
      3,
      2,
      17,
      4,
      19,
      4,
      5,
      23,
      28,
      7,
      51,
      56,
      8,
      107,
      16,
      0,
      0,
      0,
      1,
      0,
      1,
      1,
      1,
      0,
      2,
      2,
      3,
      0,
      0,
      3,
      4,
      1,
      1,
      1,
      0,
      6,
      2,
      6,
      2,
      5,
      10,
      2,
      0,
      1,
      5,
      1,
      1,
      4,
      6,
      12,
      5,
      4,
      10,
      2,
      5,
      6,
      12,
      5,
      10,
      2,
      4,
      10,
      2,
      1,
      9,
      0,
      7,
      65,
      99,
      99,
      111,
      117,
      110,
      116,
      14,
      99,
      114,
      101,
      97,
      116,
      101,
      95,
      97,
      99,
      99,
      111,
      117,
      110,
      116,
      9,
      101,
      120,
      105,
      115,
      116,
      115,
      95,
      97,
      116,
      22,
      112,
      97,
      121,
      95,
      102,
      114,
      111,
      109,
      95,
      119,
      105,
      116,
      104,
      95,
      109,
      101,
      116,
      97,
      100,
      97,
      116,
      97,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      1,
      1,
      5,
      1,
      14,
      10,
      1,
      17,
      1,
      32,
      3,
      5,
      5,
      8,
      10,
      1,
      11,
      2,
      56,
      0,
      11,
      0,
      10,
      1,
      10,
      3,
      11,
      4,
      56,
      1,
      2
    ]));
    List<TypeTag> ty_args = new List<TypeTag>(1);
    ty_args[0] = token_type;
    List<TransactionArgument> args = new List<TransactionArgument>(4);
    args[0] = new TransactionArgumentAddressItem(payee);
    args[1] = new TransactionArgumentU8VectorItem(payee_public_key);
    args[2] = new TransactionArgumentU128Item(amount);
    args[3] = new TransactionArgumentU8VectorItem(metadata);

    var script = new Script(code, ty_args, args);
    return script;
  }

  static Script encode_publish_shared_ed25519_public_key_script(
      Bytes public_key) {
    var code = new Bytes(Uint8List.fromList([
      -95,
      28,
      -21,
      11,
      1,
      0,
      0,
      0,
      5,
      1,
      0,
      2,
      3,
      2,
      5,
      5,
      7,
      6,
      7,
      13,
      31,
      8,
      44,
      16,
      0,
      0,
      0,
      1,
      0,
      1,
      0,
      2,
      6,
      12,
      10,
      2,
      0,
      22,
      83,
      104,
      97,
      114,
      101,
      100,
      69,
      100,
      50,
      53,
      53,
      49,
      57,
      80,
      117,
      98,
      108,
      105,
      99,
      75,
      101,
      121,
      7,
      112,
      117,
      98,
      108,
      105,
      115,
      104,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      1,
      4,
      11,
      0,
      11,
      1,
      17,
      0,
      2
    ]));
    var ty_args = List<TypeTag>();
    List<TransactionArgument> args = new List<TransactionArgument>(1);
    args[0] = new TransactionArgumentU8VectorItem(public_key);

    var script = new Script(code, ty_args, args);
    return script;
  }
}
